// Autogenerated by colorConvert.lua
// Do not include this file

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgb, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgb, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgb, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgb, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgb, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgb, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgb, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgb, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgb, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgb, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgb, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgb, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgb, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgb, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgb, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgb, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGB_888, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgb, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<bgr, rgb>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<bgr, bgr>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<bgr, rgba>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<bgr, bgra>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<bgr, r_8>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<bgr, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<bgr, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<bgr, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<bgr, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<bgr, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<bgr, fr>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<bgr, frgb>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<bgr, frgba>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<bgr, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<bgr, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<bgr, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::BGR_888, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<bgr, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgba, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgba, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgba, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgba, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgba, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgba, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgba, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgba, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgba, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgba, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgba, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgba, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgba, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgba, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_8888, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgba, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<bgra, rgb>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<bgra, bgr>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<bgra, rgba>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<bgra, bgra>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<bgra, r_8>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<bgra, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<bgra, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<bgra, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<bgra, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<bgra, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<bgra, fr>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<bgra, frgb>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<bgra, frgba>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<bgra, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<bgra, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<bgra, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::BGRA_8888, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<bgra, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<r_8, rgb>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<r_8, bgr>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<r_8, rgba>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<r_8, bgra>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<r_8, r_8>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<r_8, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<r_8, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<r_8, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<r_8, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<r_8, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<r_8, fr>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<r_8, frgb>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<r_8, frgba>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<r_8, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<r_8, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<r_8, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::R_8, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<r_8, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgb_332, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgb_332, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgb_332, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgb_332, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgb_332, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgb_332, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgb_332, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgb_332, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgb_332, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGB_332, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgb_332, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgb_565, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgb_565, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgb_565, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgb_565, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgb_565, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgb_565, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgb_565, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgb_565, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgb_565, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGB_565, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgb_565, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_4444, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgba_4444, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_5551, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgba_5551, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_10_10_10_2, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgba_10_10_10_2, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<fr, rgb>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<fr, bgr>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<fr, rgba>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<fr, bgra>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<fr, r_8>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<fr, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<fr, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<fr, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<fr, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<fr, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<fr, fr>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<fr, frgb>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<fr, frgba>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<fr, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<fr, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<fr, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::FR, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<fr, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<frgb, rgb>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<frgb, bgr>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<frgb, rgba>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<frgb, bgra>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<frgb, r_8>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<frgb, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<frgb, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<frgb, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<frgb, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<frgb, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<frgb, fr>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<frgb, frgb>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<frgb, frgba>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<frgb, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<frgb, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<frgb, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::FRGB, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<frgb, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<frgba, rgb>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<frgba, bgr>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<frgba, rgba>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<frgba, bgra>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<frgba, r_8>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<frgba, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<frgba, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<frgba, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<frgba, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<frgba, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<frgba, fr>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<frgba, frgb>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<frgba, frgba>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<frgba, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<frgba, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<frgba, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::FRGBA, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<frgba, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, bgr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, bgra>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, r_8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, fr>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, frgb>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, frgba>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::RGBA_16_16_16_16, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<rgba_16_16_16_16, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgb>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<grayscale8, bgr>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgba>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<grayscale8, bgra>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<grayscale8, r_8>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<grayscale8, fr>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<grayscale8, frgb>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<grayscale8, frgba>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<grayscale8, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<grayscale8, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<grayscale8, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE8, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<grayscale8, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgb>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<grayscale16, bgr>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgba>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<grayscale16, bgra>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<grayscale16, r_8>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<grayscale16, fr>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<grayscale16, frgb>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<grayscale16, frgba>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<grayscale16, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<grayscale16, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<grayscale16, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::GRAYSCALE16, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<grayscale16, fgrayscale>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGB_888>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgb>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::BGR_888>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, bgr>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGBA_8888>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgba>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::BGRA_8888>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, bgra>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::R_8>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, r_8>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGB_332>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgb_332>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGB_565>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgb_565>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGBA_4444>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgba_4444>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGBA_5551>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgba_5551>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGBA_10_10_10_2>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgba_10_10_10_2>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::FR>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, fr>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::FRGB>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, frgb>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::FRGBA>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, frgba>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::RGBA_16_16_16_16>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, rgba_16_16_16_16>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::GRAYSCALE8>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, grayscale8>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::GRAYSCALE16>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, grayscale16>(from, to);
}

template <>
void convert<ePixelFormat::FGRAYSCALE, ePixelFormat::FGRAYSCALE>(const Image &from, Image &to)
{
	copyImageData<fgrayscale, fgrayscale>(from, to);
}

